package main

func main() {
	/*
	单人开发:
	1.在工作区中的打开git终端
	2.通过git init指令, 初始化版本库
	3.编写代码
	4.将编写的代码通过git add . 添加到版本库的暂缓区中
	5.通过git commit -m"说明" 将暂缓区的文件添加到HEAD指针指向的分支中
	(默认只有一个分支, master分支, 也称之为主分支)
	6.通过git log查看我们每次添加修改的内容
	7.通过git diff查看当前文件和版本库中文件的差异
	8.通过git reset --hard 版本号  在任意版本之间切换

	多人开发:
	1.项目负责人在服务器上, 的工作区中打开git终端
	2.通过git init --bare, 初始化一个共享的版本库
	3.项目负责人告诉开发人员, 当前项目的版本库路径(URL)
	4.开发人员通过 git clone从远程服务器下载 共享的版本库到本地
	5.编写代码
	6.将编写的代码通过git add . 添加到版本库的暂缓区中
	7.通过git commit -m"说明" 将暂缓区的文件添加到HEAD指针指向的分支中
	7.1注意点: 一定不要将不能运行的代码提交到远程的版本库
	7.2        一般情况下在企业开发中, 本地的提交可能稍微频繁一些,
		       但是提交到远程服务器的操作不会那么频繁, 一般情况下一天最多两次
	8.通过git push 将本地编写好的代码提交到远程服务器的版本库
	9. 其它开发人员可以通过git clone或者git pull从远程服务器获取最新的代码

	注意点:
	1.在企业开发中, 如果有其它同事往服务器提交了新的代码, 那么我们就没办法直接提交
	如果我们想要提交, 那么我们必须先将服务器的代码更新到本地
	2.更新到本地之后, 如果没有代码冲突, 那么可以直接提交
	3.更新到本地之后, 如果有代码冲突, 那么必须先手动解决了冲突, 才能提交

	在企业开发中, 一定要记住, 千万不要好几天都不提交代码, 否则后果非常非常严重, 很多烂屁股等你擦
	一般情况下, 一旦分配给自己的某个功能实现了就立即提交到远程服务器
	或者分配给你的任务中, 某个某块实现了就立即提交到远程服务器
	只要保存提交到远程服务器的代码是可以运行的就行
	 */
}
