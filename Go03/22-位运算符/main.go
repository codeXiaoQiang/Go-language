package main

import "fmt"

func main() {
	/*
	1.C语言中的位运算符有
	& | ^ << >>
	2.Go语言的位运算符号C语言一样
	& | ^ << >>
	多了一个 &^

	3.位运算是专门用于计算二进制位的
	& 一假则假
	| 一真则真
	^ 不同为真, 相同为假
	<< 乘以2的左移多少次幂
	>> 除以2的右移多次次幂
	 */

	 /*
	 按位与
	 0110      a
    &1011      b
	 -----
	 0010
	  */
	//a1 := 6
	//b1 := 11
	//res := a1 & b1
	//fmt.Println(res) // 2

	/*
	按位或
	0110      a
   |1011      b
	-----
	1111
	 */
	//a1 := 6
	//b1 := 11
	//res := a1 | b1
	//fmt.Println(res) // 15
	/*
	按位异或
	0110      a
   ^1011      b
	-----
	1101
	 */
	//a1 := 6
	//b1 := 11
	//res := a1 ^ b1
	//fmt.Println(res) // 13

	/*
	左移:
	乘以2的左移多少次幂
	 */
	//num := 3
	////    3 * 2(2) --> 3 * 4
	//num = num << 2
	//fmt.Println(num)

	/*
	右移:
	除以2的右移多次次幂
	 */
	 //num := 12
	 ////     12 / 2(2) --> 12/4
	 //num = num >> 2
	 //fmt.Println(num)

	 /*
	 &^ 逻辑清零运算符
	 如果b的二进制的当前位是1, 那么就清零
	 如果b的二进制的当前位不是1, 那么就保留a对应二进制位的数据

	    0110      a
	 &^1011      b
	 -----
      0100
	  */
	a1 := 6
	b1 := 11
	res := a1 &^ b1
	fmt.Println(res) // 4
}
